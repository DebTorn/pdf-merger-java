/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pdfmerge.main;

import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import pdfmerge.main.objects.Pdf;

/**
 *
 * @author debto
 */
public class View extends javax.swing.JFrame {

    private Pdf pdf;
    private DefaultListModel model;
    
    /**
     * Creates new form View
     */
    public View() {
        pdf = new Pdf();
        initComponents();
        model = new DefaultListModel();
        UploadedFilesList.setModel(model);
    }
    
    public void ListUp(String element){
       model.addElement(element);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NewFileUpload = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        UploadedFilesList = new javax.swing.JList<>();
        MergeBtn = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        SelectedDeleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NewFileUpload.setForeground(new java.awt.Color(0, 153, 0));
        NewFileUpload.setText("Fájl kiválasztása");
        NewFileUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewFileUploadActionPerformed(evt);
            }
        });

        UploadedFilesList.setToolTipText("");
        jScrollPane1.setViewportView(UploadedFilesList);

        MergeBtn.setForeground(new java.awt.Color(255, 0, 255));
        MergeBtn.setText("Összefűzés");
        MergeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MergeBtnActionPerformed(evt);
            }
        });

        Reset.setForeground(new java.awt.Color(153, 0, 0));
        Reset.setText("Fájlok törlése");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        SelectedDeleteBtn.setForeground(new java.awt.Color(255, 51, 51));
        SelectedDeleteBtn.setText("Kijelölt elem törlése");
        SelectedDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectedDeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SelectedDeleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Reset))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NewFileUpload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MergeBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewFileUpload)
                    .addComponent(MergeBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Reset)
                    .addComponent(SelectedDeleteBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewFileUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewFileUploadActionPerformed
            try{
                JFileChooser chooser = new JFileChooser();
                chooser.setVisible(true);
                chooser.setDialogTitle("PDF kiválsztás");
                chooser.setApproveButtonText("Kiválasztás");
                String path = "";
                if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
                    path = chooser.getSelectedFile().getAbsolutePath();
                }
                
                pdf.addPath(path);
                ListUp(path);
                
            }catch(Exception e){
                System.err.println(e);
            }
    }//GEN-LAST:event_NewFileUploadActionPerformed

    private void MergeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MergeBtnActionPerformed
        pdf.Merge();
    }//GEN-LAST:event_MergeBtnActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        if(pdf.deleteAllPath()){
            model.removeAllElements();   
        }
    }//GEN-LAST:event_ResetActionPerformed

    private void SelectedDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectedDeleteBtnActionPerformed
        if(pdf.deletePath(UploadedFilesList.getSelectedValue())){
            model.remove(UploadedFilesList.getSelectedIndex());   
        }
    }//GEN-LAST:event_SelectedDeleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MergeBtn;
    private javax.swing.JButton NewFileUpload;
    private javax.swing.JButton Reset;
    private javax.swing.JButton SelectedDeleteBtn;
    private javax.swing.JList<String> UploadedFilesList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
